//! ## 布隆过滤器
//!
//! #### 算法说明
//! - bloom filter
//! - 原版布隆过滤器无法在源数据删除某些元素之后进行对应的更新；
//! - 但对于类似区块链这种只增不删的场景，特别适合；
//! - 用于快速检索大数据集，以允许少量错判为代价，兼顾时间与空间两方面的效率；
//! - 难点在于如何根据具体的场景，选定最优的哈希函数、哈希次数及索引数组的容量；
//! - 合适的索引数组容量计算公式：m = kn/ln2， k指哈希函数数量，n指被索引的数据总量。
//!
//! #### 应用场景
//! - 区块链轻节点校验交易：由于轻节点仅有区块头信息，并无完整的交易数据，故首先要粗略定位至可能含有目标交易的区块，之后只向全节点请求经过布隆过滤器筛选出的一个或多个区块的数据。
//!
//! #### 实现属性
//! - <font color=Green>√</font> 多线程安全
//! - <font color=Green>√</font> 无 unsafe 代码
//!

#[cfg(test)]
mod test {
    #[test]
    fn test() {}
}
